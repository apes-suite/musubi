require "musubi"
print('-----------------------------------------------------------------------')
print('Simulation name: ', simulation_name )
print('-----------------------------------------------------------------------')
if shepherd then
  print('Refinementlevel is decreased for the nightly recheck. You might want')
  print('to set "shepherd = false" in musubi.lua.')
print('-----------------------------------------------------------------------')
end
print('-------Mesh parameters [m]------')
print('Length of domain (x) =', length  )
print('Height of domain (y) =', length  )
print('-------Number of elements-------')
print('in height    =', length/dx       )
print('in length    =', length/dx       )
print('----------Resolution------------')
print('dx (spatial)  =', dx             )
print('dt (temporal) =', dt             )
print('Level for dx  =', refinementLevel)
print('---Gaussian pulse parameters----')
print('Center of peak             =', center[1], ',', center[2], ',',center[3])
print('Height of peak (amplitude) =', amplitude)
print('Standard deviation         =', halfwidth)
print('Background pressure        =', background, '[N/m^2]')
print('------------Acoustic source--------------')
print('Background density   =', background       )
print('Background pressure  =', press_ambient    )
print('Amplitude of density =', amplitude        )
print('-------------Timings---------------------')
print('Max. simulation time         =', tmax_phy )
print('-----------------Flow parameters----------------')
print('Kinematic visc.  =', nu_phy,   '[m^s/2]'         )
print('Ma               =', Ma                          )
print('---------------In physical units----------------')
print('Mean velocity      = ', vel_mean_phy,  '[m/s]'   )
print('Density            = ', rho0_phy,   '[kg/m^3]'   )
print('------------In lattice units--------------')
-- Lattice viscosity
nu_lat = nu_phy * dt / dx^2
print('Kinematic lattice visc. =', nu_lat         )
print('Lattice velocity        =', vel_lat        )
-- Lattice relaxation parameter
omega = 1.0 / ( nu_lat/cs_lat^2.0 + 0.5           )
print('Relaxation param.       =', omega          )
print('-----------------------------------------------------------------------')
